>>> import os
>>> 
>>> snr_cortex = []
>>> snr_gm = []
>>> 
>>> prefix = '/home/alonso/randy/sprague/CTRL/'
>>> for subject_folder in os.listdir(prefix): 
...     print(subject_folder)
...     for slice_folder in os.listdir(prefix + subject_folder + '/30/'):
...         if 'slice_' in slice_folder:
...             results_folder = prefix + subject_folder + '/30/' + slice_folder + '/results/'
...             for filename in os.listdir(results_folder):
...                 if 'cortex_snr' in filename:
...                     with open(results_folder + filename, 'r') as f:
...                         value = float(f.readline())
...                         snr_cortex.append(value)
...                         print(value)
...                 if 'gm_snr' in filename:
...                     with open(results_folder + filename, 'r') as f:
...                         value = float(f.readline())
...                         snr_gm.append(value)
...                         print(value)
"""
>>> 
>>> import os
>>> 
>>> snr_cortex = []
>>> snr_gm = []
>>> 
>>> prefix = '/home/alonso/randy/sprague/CTRL/'
>>> for subject_folder in os.listdir(prefix): 
...     print(subject_folder)
...     for slice_folder in os.listdir(prefix + subject_folder + '/30/'):
...         if 'slice_' in slice_folder:
...             results_folder = prefix + subject_folder + '/30/' + slice_folder + '/results/'
...             for filename in os.listdir(results_folder):
...                 if 'cortex_snr' in filename:
...                     with open(results_folder + filename, 'r') as f:
...                         value = float(f.readline())
...                         snr_cortex.append(value)
...                         print(value)
...                 if 'gm_snr' in filename:
...                     with open(results_folder + filename, 'r') as f:
...                         value = float(f.readline())
...                         snr_gm.append(value)
...                         print(value)
... 
65C
11.79001355443919
6.263850296956687
17.028297859364518
6.085630934142946
17.124022826766726
7.04386410560365
5.947515469055275
9.850711500668332
34.379763212931124
6.361450813255632
69B
7.163512660690049
19.88039800328319
8.882406243065315
30.860968340763005
8.88029087646604
19.4273802586761
10.253436523607423
28.167547829069782
65B
29.986927733098412
7.992698522422881
21.90478738128081
9.28548753723154
16.766607725742016
8.217870912466086
18.13598952143727
9.738877113517802
19.906345772489637
7.996110116423853
64C
28.98789419993867
6.927914584207901
7.537105015392102
33.21244316217868
41.84228890439637
8.308909610779288
7.511622549358398
33.86088400739474
6.594030524869677
18.052260456707987
65F
65A
18.693071589730078
7.986492436989493
17.554180846582994
7.58519766394387
19.02486502763976
6.468992979866464
17.63540014562349
6.521186742060529
7.515261310111321
25.63720060479201
65D
13.802938678357634
6.162161346844684
23.18377760182986
6.858024749491449
17.941051600261265
8.269298052904372
7.569642051367057
20.347332153831825
24.583652216943545
8.035103306579414
65H
8.503444262871996
26.197101186644428
18.331039809028997
8.082909505436689
8.167005895194205
23.76577078956016
8.086760347395273
21.130305320096063
7.893607821805655
21.816244465194735
64D
7.20617050839004
27.620326298748505
6.946271438556247
25.51352822855069
21.923793202941255
7.470333058473453
16.26580708231347
7.2602792309632695
37.745726533050586
9.31473341054731
64B
20.74758084823195
8.668473302076434
9.283171240691575
19.557685929529196
23.357988430610526
6.56962326294098
8.729253097365154
26.68697534073689
7.907239981429807
39.28024275194926
64E
6.911137183029494
21.423247257613955
6.797800415405183
23.646686652202
7.979304941684282
41.05633078730905
6.3990663508735794
27.811319858442392
20.932362259340497
6.131250094784574
7.608881868363208
22.37958363565329
65G
6.7605928655166645
19.42165673416533
19.947034194975775
7.28677367952633
14.143159548821608
6.982904126316902
6.015016384100299
15.187115495087667
8.19282357394061
24.543142474440057
65E
10.653148524232682
31.96756480151154
17.453457930332338
8.279060996587281
10.168218092384938
27.578068540565212
7.491967177675499
15.233862048690344
7.898061540704445
22.373786055072532
69C
15.19953786164733
31.301032249508193
15.80895250882474
8.043008267729062
10.904855669108594
21.84472766811268
8.915914595839423
19.921441879919385
69A
7.816181203322469
20.12044529887781
12.728346602677176
6.719308357348703
27.600262018418654
10.972010498027691
30.51047672619885
8.277949862585219
28.142479534496402
9.514052152689292
64A
7.420678138386698
25.871945741641508
24.45689775473181
6.294519621496298
11.824884792626728
30.129779828921382
8.021804292562004
18.266992588942415
12.557313795434684
41.38564124135031
>>> import numpy as np
>>> 
>>> np.mean(snr_cortex)
8.028260112672154
>>> np.mean(snr_gm)
23.41482322770609
>>> np.mean(snr_cortex) / sqrt(2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'sqrt' is not defined
>>> import math
>>> np.mean(snr_cortex) / math.sqrt(2)
5.676837166799956
>>> np.mean(snr_gm) / math.sqrt(2)
16.55678028459526
>>> (np.mean(snr_cortex) / math.sqrt(2)) * math.sqrt(8)
16.056520225344308
>>> (np.mean(snr_gm) / math.sqrt(2)) * math.sqrt(8)
46.82964645541218
>>> 

"""